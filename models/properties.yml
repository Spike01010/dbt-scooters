version: 2

sources:
  - name: "scooters_raw"
    description: "Raw data provided by scooters service"
    loader: "https://t.me/inzhenerka_dbt_bot"

    tables:

      - name: "trips"
        description: "Scooter trips"
        loaded_at_field: "finished_at"
        freshness:
          warn_after:
            count: 1
            period: "day"
          error_after:
            count: 3650
            period: "day"

      - name: "users"
        description: "Users of scooter service"
        columns:
          - name: "sex"
            description: "User gender"
            data_tests:
              - accepted_values:
                  arguments:
                    values: [ "M", "F" ]
              - not_null:
                  config:
                    severity: "warn"

      - name: "events"
        description: "Raw user events with duplicates"

models:
  - name: "trips_prep"
    description: "Trips prepared for analysis"
    config:
      materialized: "view"

  - name: "trips_stat"
    description: "Overall trips statistics"

  - name: "trips_stat_daily"
    description: "Overall trips statistics per day"
    config:
      indexes:
        - columns: [ "date" ]

  - name: "trips_age_daily"
    description: "Daily trips statistics by user age"
    data_tests:
      - unique:
          column_name: "date::text || age::text"

  - name: "trips_age_daily_stat"
    description: "Aggregation of daily trips statistics by user age"

  - name: "trips_geom"
    description: "Trips prepared for geometry analysis"
    config:
      materialized: "view"

  - name: "parking_start_stat"
    description: "Trip start parking statistics by 500 m hexagons"

  - name: "parking_finish_stat"
    description: "Trip finish parking statistics by 10 m hexagons"

  - name: "trips_users"
    description: "Prepared trips enriched with users data"
    config:
      materialized: "incremental"
      post-hook:
        - "analyze dbt.trips_users"
        - sql: "vacuum dbt.trips_users"
          transaction: false



  - name: "events_clean"
    description: "User events without duplicates"
    config:
      materialized: "incremental"
      strategy: "merge"
      unique_key: [ "user_id", "timestamp", "type_id" ]
    columns:

      - name: user_id
        data_type: bigint
      - name: timestamp
        data_type: timestamp without time zone
      - name: type_id
        data_type: bigint
      - name: updated_at
        data_type: timestamp with time zone





  - name: "trips_concurrency"
    description: "Количество одновременных поездок во времени"
    config:
      materialized: "incremental"
    columns:
      - name: timestamp
        description: "Метка времени (с часовой зоной), определяет момент замера одновременных поездок"
        data_type: timestamp with time zone
      - name: concurrency
        description: "Число поездок, происходивших одновременно в момент timestamp"
        data_type: numeric
      - name: updated_at
        description: "Метка времени (с часовой зоной) последнего обновления записи"
        data_type: timestamp with time zone


  - name: "companies"
    description: "Scooter satistics by company"

  - name: "companies_trips"
    description: "Trip satistics by company"
    columns:
      - name: "company"
        description: "Scooters manufacturing company"
        data_tests:
          - unique

  - name: "events_full"
    description: "User events enriched with meaningful types"
    config:
      materialized: "view"

  - name: "events_stat"
    description: "Overall user events statistics"

  - name: "trips_age_group"
    description: "Overall trips statistics by user age group"
